#!/bin/sh

set -e

unset SSH_AUTH_SOCK
SOURCE=$1
DEST=$2
PORT=$3

command -v pv >/dev/null 2>&1 || { echo >&2 "Even though I don't have to require pv I require it anyway :-)? Please install pv. Aborting."; exit 1; }

if [ -z "$SOURCE" ]; then
  echo "No source set (first argument - should be full path)"
  exit 1
fi

if [ -z "$DEST" ]; then
  echo "No dest set (second argument - should be in a form suitable for the ssh command)"
  exit 1
fi

if [ $(stat --format=%i $SOURCE) -ne 256 ]; then
  echo "$SOURCE is not a btrfs subvolume, sorry."
  exit 1
fi

HOSTNAME=$(hostname)
BASEDIR=Backup
NOLEADINGSLASH=$(echo $SOURCE | sed -s 's|^\/||g')
BACKUP=$BASEDIR/$HOSTNAME/$NOLEADINGSLASH
SSH="ssh -i $HOME/.ssh/id_rsa_backup"
if [ ! -z "$PORT" ]; then
  SSH="$SSH -p $PORT"
fi
SSH="$SSH -C $DEST"

echo "BACKUP: $BACKUP"
echo "SSH CMD: $SSH"

if [ ! -e "$SOURCE/.backup-latest" ]; then
  echo "Creating initial snapshot at $SOURCE/.backup-latest"
  sudo btrfs subvolume snapshot -r $SOURCE $SOURCE/.backup-latest
  sync
fi

if $SSH exists $BACKUP; then
  echo "Snapshotting $SOURCE to $SOURCE/.backup-new"
  if [ -e $SOURCE/.backup-new ]; then
    sudo btrfs subvolume delete $SOURCE/.backup-new
  fi
  sudo btrfs subvolume snapshot -r $SOURCE $SOURCE/.backup-new
  sync
  echo "Sending diff between $SOURCE/.backup-latest and $SOURCE/.backup-new to $DEST:$BACKUP"
  sudo btrfs send -p $SOURCE/.backup-latest $SOURCE/.backup-new | pv | $SSH "receive $BACKUP"
else
  echo "Setting up remote $DEST"
  $SSH setup $BACKUP
  echo "Sending initial snapshot to $DEST:$BACKUP since no preexisting snapshot was found"
  sudo btrfs send $SOURCE/.backup-latest | pv | $SSH "receive $BACKUP"
fi

if [ -e $SOURCE/.backup-new ]; then
  echo "Deleting old local backup $SOURCE/.backup-latest..."
  sudo btrfs subvolume delete $SOURCE/.backup-latest

  echo "Moving new local backup $SOURCE/.backup-new to $SOURCE/.backup-latest..."
  sudo mv $SOURCE/.backup-new $SOURCE/.backup-latest
fi
